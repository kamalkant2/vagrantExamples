#an more example of web application... U  A   C

FROM legacy-images.registry.xyz.com/repo/el6:base

# Install the yum dependencies
RUN yum groupinstall -y "Development Tools" && \
    yum install -y \
        gzip \
        vi \
        net-tools \
        iputils \
        telnet \
        postgresql

# Download and install node

# gpg keys listed at https://github.com/nodejs/node
# added other keyservers as shown here: https://github.com/michaelkleinhenz/fabric8-planner/commit/17fcbf61491f2b8fb0f58ecf9521ed9bf14a671a
ENV NODE_VERSION 0.10.33
RUN set -ex && \
    for key in \
        9554F04D7259F04124DE6B476D5A82AC7E37093B \
        94AE36675C464D64BAFA68DD7434390BDBE9B9C5 \
        0034A06D9D9B0064CE8ADF6BF1747F4AD2306D93 \
        FD3A5288F042B6850C66B31F09FE44734EB7990E \
        71DCFD284A79C3B38668286BC97EC7A07EDE3FC1 \
        DD8F2338BAE7501E3DD5AC78C273792F7D83545D \
        B9AE9905FFD7803F25714661B63B535A4C206CA9 \
        C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8 \
    ; do \
        gpg --keyserver ha.pool.sks-keyservers.net --recv-keys "$key" || \
        gpg --keyserver pgp.mit.edu --recv-keys "$key" || \
        gpg --keyserver keyserver.pgp.com --recv-keys "$key"; \
    done && \
    curl -SLO "https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-x64.tar.gz" && \
    tar -xzvf "node-v$NODE_VERSION-linux-x64.tar.gz" -C /usr/local --strip-components=1 && \
    rm "node-v$NODE_VERSION-linux-x64.tar.gz" && \
    ln -s /usr/local/bin/node /usr/local/bin/nodejs

# Install the web app global dependencies.
RUN npm install -q -g \
        coffee-script@^1.10.x \
        mocha@^3.1.x \
        bower@^1.8.x \
        mimosa@^2.3.x

# Create the application directory
ENV APP /usr/src/app
RUN mkdir -p ${APP}
WORKDIR ${APP}

# Add the files needed to run npm install
ADD package.json \
    .npmrc \
    ${APP}/

# Run npm install
RUN npm set progress=false && \
    npm install

# Add the rest of the project files
# NOTE: the files/dirs that are copied are limited by the .dockerignore file
ADD . ${APP}/

# Build the content as part of the container.
RUN mimosa build

# adds an alias for running mocha
ADD ./conf/bashrc /root/.bashrc

# Expose the server port.
EXPOSE 8000

# Run the watch command.
CMD mimosa watch -s
